generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PositionsClmm {
  positionMint  String   @id
  wallet        String
  poolId        String
  tokenA        String
  tokenB        String
  decA          Int
  decB          Int
  tickLower     Int
  tickUpper     Int
  lastLiquidity String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([wallet])
  @@index([tokenA])
  @@index([tokenB])
  @@index([updatedAt])
}

model TxEvent {
  txSig          String   @id
  wallet         String
  mint           String
  positionMint   String?
  poolId         String?
  dex            String?  // DEX identifier: "raydium", "orca"
  action         String
  amountA        String?
  amountB        String?
  liquidityDelta String?
  // NEW: Fee tracking fields for transparency and admin monitoring
  skimBp         Int?     // Skim basis points (e.g., 200 for 2%)
  skimA          String?  // Skimmed amount for token A
  skimB          String?  // Skimmed amount for token B
  flatSol        Float?   // Flat fee in SOL
  success        Boolean  @default(true)
  ts             DateTime @default(now())

  @@index(wallet)
  @@index(mint)
  @@index(dex)
}

// Pro Access Management - Tracks users who have paid for Pro features
model ProAccess {
  wallet         String   @id  // User's wallet address (primary key)
  txSig          String   // Transaction signature that granted Pro access
  expiresAt      DateTime? // Optional expiration date (null = permanent access)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index(wallet)
  @@index(expiresAt)
}

// Admin Authentication - Manages admin login sessions
model AdminSession {
  id         String   @id @default(cuid())
  wallet     String   // Admin wallet address
  nonce      String   // Challenge nonce for authentication
  used       Boolean  @default(false) // Whether nonce has been used
  createdAt  DateTime @default(now())
  verifiedAt DateTime? // When authentication was completed
  
  @@index([wallet])
  @@index([nonce])
  @@index([createdAt])
}
